{"version":3,"file":"index.js","mappingshEA;AACA;;;;AEDA;AACA;AACA;AACA","sources":["../webpack://slugify-issue/./lib/index.js","../webpack://slugify-issue/webpack/bootstrap","../webpack://slugify-issue/webpack/runtime/async module","../webpack://slugify-issue/webpack/runtime/compat","../webpack://slugify-issue/webpack/before-startup","../webpack://slugify-issue/webpack/startup","../webpack://slugify-issue/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//@ts-nocheck\nconst core_1 = __importDefault(require(\"@actions/core\"));\nconst github_1 = __importDefault(require(\"@actions/github\"));\nconst cloudflare_js_1 = __importDefault(require(\"./cloudflare.js\"));\n// import fetch from \"node-fetch\"\ntry {\n    // This should be triggerd with the issue, so will have that payload\n    const { action, issue, changes } = github_1.default.context.payload;\n    // Cloudflare\n    // const account = core.getInput(\"cloudflare_account_id\")\n    // const namespace = core.getInput(\"cloudflare_namespace_id\")\n    // const namespace = core.getInput(\"namespace_identifier\")\n    const slug = slugify(issue === null || issue === void 0 ? void 0 : issue.title);\n    console.log(`Title: ${issue.title} => Slug: ${slug}`);\n    // console.log(`Slug: ${slug}!`)\n    // let updateKey = true\n    let keyExists = undefined;\n    let valuesMatch = undefined;\n    let result = undefined;\n    const checkKey = await (0, cloudflare_js_1.default)({ key: slug });\n    // console.log(checkKey, typeof checkKey, typeof issue.number)\n    if (typeof checkKey === \"number\") {\n        result = checkKey;\n        keyExists = true;\n        valuesMatch = checkKey == issue.number;\n    }\n    else if (typeof checkKey === \"object\") {\n        result = checkKey.result;\n        keyExists = checkKey.result !== null;\n        valuesMatch = checkKey.result == issue.number;\n    }\n    // console.log(result, keyExists, valuesMatch)\n    // console.log(`Value of ${slug}: ${checkKey.result}`)\n    // if (!checkKey.success) {\n    //   console.log(checkKey)\n    //   core.notice(checkKey.errors)\n    // }\n    if (action === \"deleted\" && keyExists) {\n        await deleteSlug(slug);\n    }\n    else if (keyExists && valuesMatch) {\n        console.log(`No update needed for key: ${result} -> ${issue.number}`);\n        // return //`Done`\n    }\n    else if (keyExists && !valuesMatch) {\n        console.log(`Key '${result}' exists, but needs updating to ${issue.number}`);\n        await updateSlug(slug, issue.number);\n    }\n    else if (!keyExists) {\n        console.log(`Key '${slug}' doesnt exist. `);\n        await updateSlug(slug, issue.number);\n    }\n    if (action === \"edited\") {\n        const oldSlug = slugify((_a = changes === null || changes === void 0 ? void 0 : changes.title) === null || _a === void 0 ? void 0 : _a.from);\n        if (oldSlug && slug !== oldSlug) {\n            console.log(`Old Slug to delete: \"${oldSlug}\". (New Slug: \"${slug}\")`);\n            // console.log(`Need to delete old slug: ${oldSlug}`)\n            await deleteSlug(oldSlug);\n        }\n    }\n    // await revalidate(slug)\n    core_1.default.setOutput(\"slug\", slug);\n    core_1.default.setOutput(\"issue_number\", issue.number);\n    // core.setOutput(\"needsUpdate\", updateKey)\n    // Get the JSON webhook payload for the event that triggered the workflow\n    const payload = JSON.stringify(github_1.default.context.payload, undefined, 2);\n    console.log(`\\nThe event payload: ${payload}`);\n}\ncatch (error) {\n    // Get the JSON webhook payload for the event that triggered the workflow\n    const payload = JSON.stringify(github_1.default.context.payload, undefined, 2);\n    console.log(`\\nThe event payload: ${payload}`);\n    core_1.default.setFailed(error.message);\n}\n// }\nfunction slugify(text) {\n    // console.log(text);\n    // console.log(typeof text);\n    if (!text || typeof text !== \"string\")\n        return null;\n    return (text\n        // .toString() // Cast to string (optional)\n        .normalize(\"NFKD\") // The normalize() using NFKD method returns the Unicode Normalization Form of a given string.\n        .toLowerCase() // Convert the string to lowercase letters\n        .trim() // Remove whitespace from both sides of a string (optional)\n        .replace(/\\s+/g, \"-\") // Replace spaces with -\n        .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word chars\n        .replace(/\\-\\-+/g, \"-\")); // Replace multiple - with single -\n}\nasync function updateSlug(key, value) {\n    // console.log(`Updating Key: \"${key}\" to Value \"${value}\"`)\n    const res = await (0, cloudflare_js_1.default)({ key, value });\n    if (!res.success) {\n        console.log(res);\n        core_1.default.error(res.errors);\n        throw res;\n    }\n    return res;\n}\n// async function addSlug(key, value) {\n//   return await kv({ key, value })\n// }\nasync function deleteSlug(slug) {\n    // console.log(`Deleting Slug: ${slug}`)\n    const res = await (0, cloudflare_js_1.default)({ key: slug, DELETE: true });\n    if (!res.success) {\n        console.log(res);\n        core_1.default.error(res.errors);\n        throw res;\n    }\n    return res;\n}\n// async function revalidate(slug) {\n//   const REVALIDATE_TOKEN = core.getInput(\"revalidate_token\")\n//   console.log(`Revalidating link: ${slug}`)\n//   const res = await fetch(`https://www.philbassham.com/api/revalidate?secret${REVALIDATE_TOKEN}&slug=${slug}`)\n//   if (!res.ok) throw res\n//   const json = await res.json()\n//   return json\n// }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && !queue.d) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = 1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && (queue.d = 0);\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(554);\n",""],"names":[],"sourceRoot":""}